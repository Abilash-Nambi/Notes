--> How data is stored
Stores data in tables
Columns
Rows

-->Relational Database 
it is called relational database because two ore more tables have some kind of ralationship between them.

-->Psql is an Object-relational database management system\

-->password --> 12345 port --> 5432

-->connect to database 
1.Gui client
2.Terminal or command line.
3.Application

.\c test(databsename) -->for connecting in 

-->CREATE DATABASE test; 
for creating new Database

-->DROP DATABASE test;
for deleteing database


-->Create tables 

- CREATE TABLE table name (
     Column name + data type + constraints if any.
  )

  eg:
    CREATE TABLE person (
        id int,
        first name VARCHAR (50),
        last name VARCHAR (50),
        gender VARCHAR(6),
        date of birth Date,
   )

-\d - to show all tables in database
- \d person ->we will get the details of person Table

-->Creating tables with constraints

CREATE TABLE person (
    id BIGSERIAL NOT NULL PRIMARY KEY,
    first name VARCHAR (50) NOT NULL,
    last_name VARCHAR (50) NOT NULL,
    gender VARCHAR (5) NOT NULL,
    date of birth DATE NOT NULL,
)

-->Id actually uniquely identifying a data in actual table

-->DROP TABLE person --> Deletes the table person

-->BIGSERIAL is an auto increment number.so we dont have to keep on remembering the previous number

-->How to insert records into tables

INSERT INTO person (
    first_name,
    last_name,
    gender,
    test date of birth)
    VALUES ('Anne', 'Smith', 'FEMALE' DATE 1988-01-09'
);

-\dt for showing only tables not sequece

-\i /Users/HP/Downloads/person2.sql (path of folder) --> to 
-SELECT * FROM person -> read every records from table person
-SELECT FROM person ->it actually shows the number of rows present in table person. dont show the data
-SELECT first_name from person ->shows only first name
-SELECT first_name,last_name from person ->shows only first name

-ORDER BY ->for sorting
-select * from person2 order by country_of_birth; it will sort in ascending order.
-select * from person2 order by country_of_birth desc ->for descending order.

-Distinct ->for getting the Distinct VALUES. or avoinding the duplicates datas . 
-select distinct country_of_birth from person2 order by country_of_birth

-where ->filter data based on conditions.
-select * from person2 where country_of_birth='india';
-select * from person2 where gender = 'Male' and (country_of_birth = 'Poland' or country_of_birth = 'usa');
-select * from person2 where gender = 'Male' and (country_of_birth = 'Poland' or country_of_birth = 'China') and first_name = 'Brose';

-Comparison Operators
-